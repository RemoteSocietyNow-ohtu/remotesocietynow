require('@babel/polyfill')
const supertest = require('supertest')
const app = require('../index')
const { companyAnswers }  = require('./companyAnswers')
const { peopleAnswers } = require('./peopleAnswers')
const { toggleSaveTrue } = require('./testUtils')

const mock = require('./mockdatabase')
beforeAll(async () => await mock.connect())
beforeEach(async () => {
  await toggleSaveTrue()
})
afterEach(async () => await mock.clearDB())
afterAll(async () => await mock.closeAndDrop())

test('Backend calculate company returns results', async () => {
  const response = await supertest(app)
    .post('/calculate/company/')
    .send(companyAnswers)
    .expect(200)
    .expect('Content-Type', /application\/json/)
  expect(response.body[0].value).not.toBeNull()
  expect(response.body[0].title).not.toBeNull()
})

test('Backend returns results', async () => {
  const response = await supertest(app)
    .post('/calculate/person/')
    .send(peopleAnswers)
    .expect(200)
    .expect('Content-Type', /application\/json/)
  console.log(response.body[0])
  expect(response.body[0].value).not.toBeNull()
  expect(response.body[0].title).not.toBeNull()
})